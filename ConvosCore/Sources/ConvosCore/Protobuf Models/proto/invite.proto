syntax = "proto3";

// InvitePayload represents the core invite data
message InvitePayload {
    // The encrypted conversation id (stored as raw bytes for compactness)
    bytes conversationToken = 1;

    // The creator's inbox ID as raw bytes (hex-decoded for compactness)
    // Required for: 1) conversation token decryption AAD, 2) joiner to know who to DM
    bytes creator_inbox_id = 2;

    // The tag to mark which conversation this corresponds to, lives in `ConversationCustomMetadata`
    string tag = 3;

    // optional conversation metadata
    optional string name = 4;
    optional string description = 5;
    optional string imageURL = 6;

    // Compact timestamp encoding: Unix timestamp in seconds (8 bytes fixed)
    // More compact than google.protobuf.Timestamp which uses two varints
    optional sfixed64 conversationExpiresAtUnix = 7;

    // Compact invite expiration: Unix timestamp in seconds (8 bytes fixed)
    optional sfixed64 expiresAtUnix = 8;

    // Whether the invite should expire after being used once
    bool expiresAfterUse = 9;
}

// SignedInvite represents an invite with its cryptographic signature
message SignedInvite {
    // The invite payload containing the actual invite data
    InvitePayload payload = 1;

    // The cryptographic signature (typically 65 bytes for ECDSA with recovery)
    bytes signature = 2;
}
