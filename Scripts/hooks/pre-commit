#!/usr/bin/env bash

# Exit on any error and ensure pipeline failures are caught
# set -o errexit -o pipefail -o nounset

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored messages
info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Add Homebrew to PATH if it exists
if [ -d "/opt/homebrew/bin" ]; then
    export PATH="/opt/homebrew/bin:$PATH"
elif [ -d "/usr/local/bin" ]; then
    export PATH="/usr/local/bin:$PATH"
fi

# Check for SwiftLint
if ! command -v swiftlint &> /dev/null; then
    warn "SwiftLint is not installed"
    echo "Installing SwiftLint..."
    if ! brew install swiftlint; then
        error "Failed to install SwiftLint"
        echo "Please install SwiftLint manually using:"
        echo "  brew install swiftlint"
        exit 1
    fi
fi

# Check for SwiftFormat
if ! command -v swiftformat &> /dev/null; then
    warn "SwiftFormat is not installed"
    echo "Installing SwiftFormat..."
    if ! brew install swiftformat; then
        error "Failed to install SwiftFormat"
        echo "Please install SwiftFormat manually using:"
        echo "  brew install swiftformat"
        exit 1
    fi
fi

# Verify tools are available
if ! command -v swiftlint &> /dev/null || ! command -v swiftformat &> /dev/null; then
    error "SwiftLint or SwiftFormat is not available in PATH"
    echo "Please try running:"
    echo "  export PATH=\"/opt/homebrew/bin:$PATH\""
    echo "And then try your commit again"
    exit 1
fi

info "SwiftLint and SwiftFormat are installed"

# Get list of staged Swift files
info "Checking for staged Swift files..."

git diff --diff-filter=d --staged --name-only | grep -e '\(.*\).swift$' | while read line; do
  echo "-asdf-a-sdf-asdf-"
  swiftformat "${line}";
  git add "$line";
done

info "All Swift files passed linting and formatting checks"
exit 0
