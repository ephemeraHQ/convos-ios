#!/usr/bin/env bash

# Exit on any error and ensure pipeline failures are caught
set -e
set -o pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored messages
info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Add Homebrew to PATH if it exists
if [ -d "/opt/homebrew/bin" ]; then
    export PATH="/opt/homebrew/bin:$PATH"
elif [ -d "/usr/local/bin" ]; then
    export PATH="/usr/local/bin:$PATH"
fi

# Check for SwiftLint
if ! command -v swiftlint &> /dev/null; then
    warn "SwiftLint is not installed"
    echo "Installing SwiftLint..."
    if ! brew install swiftlint; then
        error "Failed to install SwiftLint"
        echo "Please install SwiftLint manually using:"
        echo "  brew install swiftlint"
        exit 1
    fi
fi

# Check for SwiftFormat
if ! command -v swiftformat &> /dev/null; then
    warn "SwiftFormat is not installed"
    echo "Installing SwiftFormat..."
    if ! brew install swiftformat; then
        error "Failed to install SwiftFormat"
        echo "Please install SwiftFormat manually using:"
        echo "  brew install swiftformat"
        exit 1
    fi
fi

# Verify tools are available
if ! command -v swiftlint &> /dev/null || ! command -v swiftformat &> /dev/null; then
    error "SwiftLint or SwiftFormat is not available in PATH"
    echo "Please try running:"
    echo "  export PATH=\"/opt/homebrew/bin:$PATH\""
    echo "And then try your commit again"
    exit 1
fi

info "SwiftLint and SwiftFormat are installed"

# Get list of staged Swift files
info "Checking for staged Swift files..."
set +e
SWIFT_FILES=$(git diff --cached --name-only --diff-filter=ACMR 2>&1)
GIT_STATUS=$?
set -e

if [ $GIT_STATUS -ne 0 ]; then
    error "Failed to get staged files: $SWIFT_FILES"
    exit 1
fi

SWIFT_FILES=$(echo "$SWIFT_FILES" | grep "\.swift$" || true)

if [ -z "$SWIFT_FILES" ]; then
    info "No Swift files staged for commit"
    exit 0
fi

info "Found staged Swift files:"
echo "$SWIFT_FILES"

# Run SwiftLint on staged files
info "Running SwiftLint..."
if ! swiftlint lint --quiet $SWIFT_FILES; then
    error "SwiftLint found issues"
    error "Please fix the issues before committing"
    exit 1
fi

# Run SwiftFormat on staged files
info "Running SwiftFormat..."
if ! swiftformat --lint $SWIFT_FILES; then
    error "SwiftFormat found issues"
    error "Please fix the issues before committing"
    exit 1
fi

info "All Swift files passed linting and formatting checks"
exit 0
